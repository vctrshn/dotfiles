# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'body':
  'ctrl-tab': 'pane:show-next-item'
  'ctrl-tab ^ctrl': 'unset!'
  'ctrl-shift-tab': 'pane:show-previous-item'
  'ctrl-shift-tab ^ctrl': 'unset!'
'atom-text-editor.vim-mode:not(.insert-mode)':
  ';': 'ex-mode:open'
  'ctrl-d': 'vim-mode:scroll-full-screen-down'
  ']-c': 'git-diff:move-to-next-diff'
  ']-v': 'git-diff:move-to-previous-diff'
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-l': 'window:focus-pane-on-right'
  'ctrl-j': 'window:focus-pane-below'
  'ctrl-k': 'window:focus-pane-above'
  'ctrl-]': 'pane:show-next-item'
  'ctrl-[': 'pane:show-previous-item'
  'ctrl-b': 'fuzzy-finder:toggle-buffer-finder'
  'ctrl-f': 'fuzzy-grep:toggle'
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  ';': 'ex-mode:open'
  'ctrl-d': 'vim-mode-plus:scroll-full-screen-down'
  ']-c': 'git-diff:move-to-next-diff'
  ']-v': 'git-diff:move-to-previous-diff'
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-l': 'window:focus-pane-on-right'
  'ctrl-j': 'window:focus-pane-below'
  'ctrl-k': 'window:focus-pane-above'
  'ctrl-]': 'pane:show-next-item'
  'ctrl-[': 'pane:show-previous-item'
  'ctrl-b': 'fuzzy-finder:toggle-buffer-finder'
  'ctrl-f': 'fuzzy-grep:toggle'
'atom-text-editor.vim-mode:not(.normal-mode):not(.visual-mode)':
  'j k': 'vim-mode:activate-normal-mode'
'atom-text-editor.vim-mode-plus:not(.normal-mode):not(.visual-mode)':
  'j k': 'vim-mode:activate-normal-mode'
'.platform-darwin':
  'ctrl-a |': 'pane:split-right-creating-empty-pane'
  'ctrl-a -': 'pane:split-down-creating-empty-pane'
'.platform-darwin atom-workspace':
  'ctrl-;': 'terminal-plus:toggle'
  'ctrl-shift-z': 'terminal-plus:toggle-fullscreen'
'.platform-darwin .terminal-plus .terminal':
  'cmd-c': 'terminal-plus:copy'
  'cmd-v': 'terminal-plus:paste'
'body atom-text-editor.autocomplete-active':
  'shift-tab': 'autocomplete-plus:move-up'
  'tab': 'autocomplete-plus:move-down'
  'ctrl-p': 'autocomplete-plus:move-up'
  'ctrl-n': 'autocomplete-plus:move-down'
'.fuzzy-finder atom-text-editor[mini]':
  'ctrl-v': 'pane:split-right'
  'ctrl-x': 'pane:split-down'
'.platform-darwin atom-text-editor':
  'ctrl-shift-l': 'window:move-active-item-to-pane-on-right'
  'ctrl-shift-h': 'window:move-active-item-to-pane-on-left'
  'g d': 'hyperclick:confirm-cursor'
  'cmd-ctrl-g': 'grammar-selector:show'
'atom-text-editor':
  'cmd-shift-b': 'git-blame:toggle'
  'cmd-shift-c': 'php-debug:toggleDebugging'
